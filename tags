!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ft_add_cmd	src/utils/cmdlist.c	/^void    ft_add_cmd(t_data *data)$/;"	f	typeref:typename:void
ft_add_env	src/utils/envlist.c	/^void	ft_add_env(t_data *data, char *key, char *val)$/;"	f	typeref:typename:void
ft_add_exp	src/utils/explist.c	/^void	ft_add_exp(t_data *data, char *key, char *val)$/;"	f	typeref:typename:void
ft_add_red	src/utils/redlist.c	/^void	ft_add_red(t_data *data, t_dlist *token)$/;"	f	typeref:typename:void
ft_add_tok	src/utils/toklist.c	/^void	ft_add_tok(t_data *data, int tokid, int tokpos, char *token)$/;"	f	typeref:typename:void
ft_arg_cmd	src/parser/parse_command.c	/^char	**ft_arg_cmd(t_dlist **cmd, t_dlist **toklist)$/;"	f	typeref:typename:char **
ft_cd	src/builtin/cd.c	/^int	ft_cd(t_data *data, char **cmd)$/;"	f	typeref:typename:int
ft_cd_alone	src/builtin/cd.c	/^int	ft_cd_alone(t_data *data)$/;"	f	typeref:typename:int
ft_cd_hyphen	src/builtin/cd.c	/^int	ft_cd_hyphen(t_data *data)$/;"	f	typeref:typename:int
ft_cd_path	src/builtin/cd.c	/^int	ft_cd_path(t_data *data, char *cmd)$/;"	f	typeref:typename:int
ft_chdir	src/builtin/cd.c	/^int	ft_chdir(char *path)$/;"	f	typeref:typename:int
ft_check_env_entry	src/utils/envlist.c	/^int	ft_check_env_entry (t_dlist *envlist, char *key)$/;"	f	typeref:typename:int
ft_check_exp_entry	src/utils/explist.c	/^int	ft_check_exp_entry (t_dlist *explist, char *key)$/;"	f	typeref:typename:int
ft_check_last_tok	src/parser/parse_quote.c	/^static int	ft_check_last_tok(t_dlist *toklist)$/;"	f	typeref:typename:int	file:
ft_check_quote_pairs	src/parser/parse_quote.c	/^static int	ft_check_quote_pairs(t_dlist *toklist)$/;"	f	typeref:typename:int	file:
ft_child	src/exec/exec.c	/^void	ft_child(t_data *data, t_dlist *cmd, char **environ)$/;"	f	typeref:typename:void
ft_clear_exit	src/utils/utils.c	/^void	ft_clear_exit(t_data *data)$/;"	f	typeref:typename:void
ft_clearlist_cmd	src/utils/cmdlist.c	/^void	ft_clearlist_cmd(t_dlist **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_clearlist_env	src/utils/envlist.c	/^void	ft_clearlist_env(t_dlist **envlist, void (*del)(void *))$/;"	f	typeref:typename:void
ft_clearlist_exp	src/utils/explist.c	/^void	ft_clearlist_exp(t_dlist **explist, void (*del)(void *))$/;"	f	typeref:typename:void
ft_clearlist_red	src/utils/redlist.c	/^void	ft_clearlist_red (t_dlist **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_clearlist_tok	src/utils/toklist.c	/^void	ft_clearlist_tok(t_dlist **toklist, void (*del)(void *))$/;"	f	typeref:typename:void
ft_close	src/exec/file.c	/^void	ft_close(t_data *data, t_dlist *cmd, int *fd)$/;"	f	typeref:typename:void
ft_cmd_error	src/exec/error.c	/^void	ft_cmd_error(t_dlist *cmd, int error)$/;"	f	typeref:typename:void
ft_command	src/parser/parse_command.c	/^char	*ft_command(t_data *data, char *command)$/;"	f	typeref:typename:char *
ft_concat_all_words	src/parser/expand_word.c	/^static char	*ft_concat_all_words(t_dlist *toklist)$/;"	f	typeref:typename:char *	file:
ft_concat_path	src/parser/expand_tilde.c	/^char *ft_concat_path(char *home, char *path)$/;"	f	typeref:typename:char *
ft_concat_quoted_words	src/parser/expand_quote.c	/^static char	*ft_concat_quoted_words(t_dlist *toklist)$/;"	f	typeref:typename:char *	file:
ft_count_pipe	src/utils/pipe.c	/^void	ft_count_pipe(t_data *data)$/;"	f	typeref:typename:void
ft_create_cmdlist	src/utils/cmdlist.c	/^void    ft_create_cmdlist(t_data *data)$/;"	f	typeref:typename:void
ft_create_redlist	src/utils/redlist.c	/^void	ft_create_redlist(t_data *data)$/;"	f	typeref:typename:void
ft_data_export	src/builtin/export.c	/^static void	ft_data_export (t_data *data, char *cmd)$/;"	f	typeref:typename:void	file:
ft_data_unset	src/builtin/unset.c	/^static void	ft_data_unset (t_data *data, char *cmd)$/;"	f	typeref:typename:void	file:
ft_dlst_elem_dup	src/utils/utils.c	/^void	ft_dlst_elem_dup(t_dlist **lst, t_dlist *dup)$/;"	f	typeref:typename:void
ft_echo	src/builtin/echo.c	/^int	ft_echo(char **cmd)$/;"	f	typeref:typename:int
ft_end_heredoc	src/exec/file.c	/^static void     ft_end_heredoc(t_dlist *cmd)$/;"	f	typeref:typename:void	file:
ft_env	src/builtin/env.c	/^int	ft_env(t_dlist *envlist)$/;"	f	typeref:typename:int
ft_envlist_export	src/builtin/export.c	/^static void	ft_envlist_export(t_data *data, char *cmd)$/;"	f	typeref:typename:void	file:
ft_envlist_unset	src/builtin/unset.c	/^static void	ft_envlist_unset(t_data *data, char *key)$/;"	f	typeref:typename:void	file:
ft_exec	src/exec/exec.c	/^int	ft_exec(t_data *data)$/;"	f	typeref:typename:int
ft_exec_builtin	src/exec/exec_builtin.c	/^int	ft_exec_builtin(t_data *data, t_dlist *cmd, int builtin_id)$/;"	f	typeref:typename:int
ft_exec_cmd	src/exec/exec.c	/^void	ft_exec_cmd(t_data *data, t_dlist *cmd, char **environ)$/;"	f	typeref:typename:void
ft_expand_dollar	src/parser/expand_var.c	/^static void ft_expand_dollar(t_data *data)$/;"	f	typeref:typename:void	file:
ft_expand_quote	src/parser/expand_quote.c	/^void	ft_expand_quote(t_data *data)$/;"	f	typeref:typename:void
ft_expand_quote2	src/parser/expand_quote.c	/^static void	ft_expand_quote2(t_dlist **new, t_dlist **temp)$/;"	f	typeref:typename:void	file:
ft_expand_tilde	src/parser/expand_tilde.c	/^void	ft_expand_tilde(t_data *data)$/;"	f	typeref:typename:void
ft_expand_var	src/parser/expand_var.c	/^static char *ft_expand_var(t_data *data, char *key)$/;"	f	typeref:typename:char *	file:
ft_expand_vars	src/parser/expand_var.c	/^void	ft_expand_vars(t_data *data)$/;"	f	typeref:typename:void
ft_expand_word	src/parser/expand_word.c	/^void	ft_expand_word(t_data *data)$/;"	f	typeref:typename:void
ft_explist_export	src/builtin/export.c	/^static void	ft_explist_export(t_data *data, char *cmd)$/;"	f	typeref:typename:void	file:
ft_explist_unset	src/builtin/unset.c	/^static void	ft_explist_unset(t_data *data, char *key)$/;"	f	typeref:typename:void	file:
ft_export	src/builtin/export.c	/^int	ft_export(t_data *data, char **cmd)$/;"	f	typeref:typename:int
ft_file_error	src/exec/error.c	/^void	ft_file_error(t_data *data, char *file, int error)$/;"	f	typeref:typename:void
ft_fork_builtin	src/exec/exec_builtin.c	/^int	ft_fork_builtin(t_dlist *cmd)$/;"	f	typeref:typename:int
ft_free	src/utils/utils.c	/^void	ft_free(void *ptr)$/;"	f	typeref:typename:void
ft_free_tab	src/utils/utils.c	/^void	ft_free_tab(char **tab)$/;"	f	typeref:typename:void
ft_getenv	src/utils/envlist.c	/^char	*ft_getenv(t_dlist *envlist, char *key)$/;"	f	typeref:typename:char *
ft_getexp	src/utils/explist.c	/^char	*ft_getexp(t_dlist *explist, char *key)$/;"	f	typeref:typename:char *
ft_handle_sigint	src/utils/signals.c	/^static void	ft_handle_sigint(void)$/;"	f	typeref:typename:void	file:
ft_handle_signal	src/utils/signals.c	/^static void	ft_handle_signal(int signal, void (*handler)())$/;"	f	typeref:typename:void	file:
ft_here_doc	src/exec/file.c	/^static void     ft_here_doc(t_data *data, t_dlist *cmd)$/;"	f	typeref:typename:void	file:
ft_heredoc_dollar	src/parser/expand_var.c	/^static void	ft_heredoc_dollar(t_data *data)$/;"	f	typeref:typename:void	file:
ft_ignore_signal	src/utils/signals.c	/^static void	ft_ignore_signal(int signal)$/;"	f	typeref:typename:void	file:
ft_init_cmd	src/utils/cmdlist.c	/^void    ft_init_cmd(t_data *data, t_cmd **cmd)$/;"	f	typeref:typename:void
ft_init_data	src/main.c	/^static void	ft_init_data(t_data *data)$/;"	f	typeref:typename:void	file:
ft_init_env	src/utils/envlist.c	/^void	ft_init_env(t_data *data)$/;"	f	typeref:typename:void
ft_init_exp	src/utils/explist.c	/^void	ft_init_exp(t_data *data)$/;"	f	typeref:typename:void
ft_init_minimal_env	src/utils/envlist.c	/^void	ft_init_minimal_env(t_data *data)$/;"	f	typeref:typename:void
ft_init_minimal_exp	src/utils/explist.c	/^void	ft_init_minimal_exp(t_data *data)$/;"	f	typeref:typename:void
ft_init_pipe	src/exec/exec.c	/^void	ft_init_pipe(t_data *data)$/;"	f	typeref:typename:void
ft_init_signals	src/utils/signals.c	/^void	ft_init_signals(void)$/;"	f	typeref:typename:void
ft_init_tty	src/utils/tty.c	/^void	ft_init_tty(void)$/;"	f	typeref:typename:void
ft_is_builtin	src/exec/exec_builtin.c	/^int	ft_is_builtin(t_dlist *cmd)$/;"	f	typeref:typename:int
ft_is_equal_sign	src/parser/expand_quote.c	/^int	ft_is_equal_sign(char *str)$/;"	f	typeref:typename:int
ft_is_n_flag	src/builtin/echo.c	/^int	ft_is_n_flag(char *arg)$/;"	f	typeref:typename:int
ft_is_tokid	src/parser/parser_utils.c	/^int	ft_is_tokid(t_dlist *toklist, int tokid)$/;"	f	typeref:typename:int
ft_is_valid_export	src/builtin/export.c	/^static int	ft_is_valid_export(char *key)$/;"	f	typeref:typename:int	file:
ft_is_valid_unset	src/builtin/unset.c	/^static int	ft_is_valid_unset(char *key)$/;"	f	typeref:typename:int	file:
ft_lexer	src/lexer/lexer.c	/^void	ft_lexer(t_data *data)$/;"	f	typeref:typename:void
ft_multiple_dollar	src/parser/expand_var.c	/^static void	ft_multiple_dollar(t_data *data)$/;"	f	typeref:typename:void	file:
ft_open	src/exec/file.c	/^void    ft_open(t_data *data, t_dlist *cmd)$/;"	f	typeref:typename:void
ft_open_file	src/exec/exec.c	/^void	ft_open_file(t_data *data)$/;"	f	typeref:typename:void
ft_parent	src/exec/exec.c	/^int	ft_parent(t_data *data, t_dlist *cmd, int pid)$/;"	f	typeref:typename:int
ft_parse_command	src/parser/parse_command.c	/^void    ft_parse_command(t_data *data)$/;"	f	typeref:typename:void
ft_parse_pipe	src/parser/parse_pipe.c	/^int	ft_parse_pipe(t_data *data)$/;"	f	typeref:typename:int
ft_parse_quote	src/parser/parse_quote.c	/^int	ft_parse_quote(t_dlist *toklist)$/;"	f	typeref:typename:int
ft_parse_redir	src/parser/parse_redir.c	/^void	ft_parse_redir(t_data *data)$/;"	f	typeref:typename:void
ft_parse_space	src/parser/parse_space.c	/^void	ft_parse_space(t_data *data)$/;"	f	typeref:typename:void
ft_parser	src/parser/parser.c	/^void	ft_parser(t_data *data)$/;"	f	typeref:typename:void
ft_perror	src/exec/error.c	/^void	ft_perror(t_data *data, t_dlist *cmd, int error)$/;"	f	typeref:typename:void
ft_pre_checks	src/parser/parse_pipe.c	/^static int	ft_pre_checks(t_dlist **token)$/;"	f	typeref:typename:int	file:
ft_printlist_cmd	src/utils/cmdlist.c	/^void	ft_printlist_cmd(t_dlist *lst)$/;"	f	typeref:typename:void
ft_printlist_elem_env	src/utils/envlist.c	/^void	ft_printlist_elem_env(t_dlist *envlist, char *key)$/;"	f	typeref:typename:void
ft_printlist_elem_exp	src/utils/explist.c	/^void	ft_printlist_elem_exp(t_dlist *explist, char *key)$/;"	f	typeref:typename:void
ft_printlist_env	src/utils/envlist.c	/^void	ft_printlist_env(t_dlist *envlist)$/;"	f	typeref:typename:void
ft_printlist_exp	src/utils/explist.c	/^void	ft_printlist_exp(t_dlist *explist)$/;"	f	typeref:typename:void
ft_printlist_redir	src/utils/redlist.c	/^void	ft_printlist_redir(t_dlist *lst)$/;"	f	typeref:typename:void
ft_printlist_tok	src/utils/toklist.c	/^void	ft_printlist_tok(t_dlist *toklist)$/;"	f	typeref:typename:void
ft_prompt	src/utils/prompt.c	/^void	ft_prompt(t_data *data)$/;"	f	typeref:typename:void
ft_prompt_line	src/utils/prompt.c	/^static char	*ft_prompt_line(t_data *data)$/;"	f	typeref:typename:char *	file:
ft_prompt_prefix	src/utils/prompt.c	/^static char	*ft_prompt_prefix(void)$/;"	f	typeref:typename:char *	file:
ft_pwd	src/builtin/pwd.c	/^int	ft_pwd(t_data *data)$/;"	f	typeref:typename:int
ft_quoted_becomes_words	src/parser/parse_quote.c	/^static void	ft_quoted_becomes_words(t_dlist *toklist)$/;"	f	typeref:typename:void	file:
ft_readline	src/utils/prompt.c	/^static void	ft_readline(t_data *data)$/;"	f	typeref:typename:void	file:
ft_remove_cmd	src/utils/cmdlist.c	/^void	ft_remove_cmd(t_dlist *cmdlist, t_dlist *cmd)$/;"	f	typeref:typename:void
ft_remove_dollar	src/parser/expand_var.c	/^static void	ft_remove_dollar(t_data *data)$/;"	f	typeref:typename:void	file:
ft_remove_empty_quotes	src/parser/expand_quote.c	/^static void	ft_remove_empty_quotes(t_data *data)$/;"	f	typeref:typename:void	file:
ft_remove_env	src/utils/envlist.c	/^t_dlist	*ft_remove_env(t_dlist *envlist, t_dlist *entry)$/;"	f	typeref:typename:t_dlist *
ft_remove_exp	src/utils/explist.c	/^t_dlist	*ft_remove_exp(t_dlist *explist, t_dlist *entry)$/;"	f	typeref:typename:t_dlist *
ft_remove_spaces	src/parser/parse_space.c	/^static void	ft_remove_spaces(t_data *data)$/;"	f	typeref:typename:void	file:
ft_remove_tok	src/utils/toklist.c	/^void	ft_remove_tok(t_dlist *toklist, t_dlist *token)$/;"	f	typeref:typename:void
ft_set_token	src/lexer/lexer.c	/^static int	ft_set_token(char *tok)$/;"	f	typeref:typename:int	file:
ft_set_word_token	src/parser/parse_quote.c	/^static void	ft_set_word_token(t_dlist **token)$/;"	f	typeref:typename:void	file:
ft_simple_quote	src/parser/expand_var.c	/^static void	ft_simple_quote(t_data *data)$/;"	f	typeref:typename:void	file:
ft_sort_exp	src/utils/explist.c	/^void	ft_sort_exp(t_dlist *explist)$/;"	f	typeref:typename:void
ft_split_path	src/utils/path.c	/^char	**ft_split_path(t_data *data)$/;"	f	typeref:typename:char **
ft_strjoin_free	src/utils/utils.c	/^char	*ft_strjoin_free(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strjoin_free_s1	src/utils/utils.c	/^char	*ft_strjoin_free_s1(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strjoin_free_s2	src/utils/utils.c	/^char	*ft_strjoin_free_s2(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_token_size	src/lexer/lexer.c	/^static size_t	ft_token_size(char *cmdline)$/;"	f	typeref:typename:size_t	file:
ft_tokenize	src/lexer/lexer.c	/^static void	ft_tokenize(t_data *data, char **cmdline, int *pos)$/;"	f	typeref:typename:void	file:
ft_trim_toklist	src/parser/parse_pipe.c	/^static void	ft_trim_toklist(t_dlist *toklist, t_dlist *token)$/;"	f	typeref:typename:void	file:
ft_unset	src/builtin/unset.c	/^int	ft_unset(t_data *data, char **cmd)$/;"	f	typeref:typename:int
ft_update_env	src/utils/envlist.c	/^void	ft_update_env(t_data *data)$/;"	f	typeref:typename:void
ft_update_oldpwd	src/builtin/cd.c	/^void	ft_update_oldpwd(t_data *data, char *oldpwd)$/;"	f	typeref:typename:void
ft_update_pwd	src/builtin/cd.c	/^void	ft_update_pwd(t_data *data, char *newpwd)$/;"	f	typeref:typename:void
ft_update_tokpos	src/utils/toklist.c	/^void	ft_update_tokpos(t_dlist *toklist)$/;"	f	typeref:typename:void
ft_var_exit_status	src/parser/expand_var.c	/^static void	ft_var_exit_status(t_data *data)$/;"	f	typeref:typename:void	file:
main	src/main.c	/^int	main(int ac, char **av)$/;"	f	typeref:typename:int
